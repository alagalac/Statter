#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Statter
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertstat_count_value(stat_count_value instance);
    partial void Updatestat_count_value(stat_count_value instance);
    partial void Deletestat_count_value(stat_count_value instance);
    partial void Insertstat(stat instance);
    partial void Updatestat(stat instance);
    partial void Deletestat(stat instance);
    partial void Insertstat_measure_value(stat_measure_value instance);
    partial void Updatestat_measure_value(stat_measure_value instance);
    partial void Deletestat_measure_value(stat_measure_value instance);
    partial void Insertstat_countdown_value(stat_countdown_value instance);
    partial void Updatestat_countdown_value(stat_countdown_value instance);
    partial void Deletestat_countdown_value(stat_countdown_value instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<stat_count_value> stat_count_values
		{
			get
			{
				return this.GetTable<stat_count_value>();
			}
		}
		
		public System.Data.Linq.Table<stat> stats
		{
			get
			{
				return this.GetTable<stat>();
			}
		}
		
		public System.Data.Linq.Table<stat_measure_value> stat_measure_values
		{
			get
			{
				return this.GetTable<stat_measure_value>();
			}
		}
		
		public System.Data.Linq.Table<stat_countdown_value> stat_countdown_values
		{
			get
			{
				return this.GetTable<stat_countdown_value>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stat_count_values")]
	public partial class stat_count_value : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _stat_id;
		
		private System.DateTime _date_created;
		
		private long _value;
		
		private EntityRef<stat> _stat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstat_idChanging(int value);
    partial void Onstat_idChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void OnvalueChanging(long value);
    partial void OnvalueChanged();
    #endregion
		
		public stat_count_value()
		{
			this._stat = default(EntityRef<stat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stat_id", DbType="Int NOT NULL")]
		public int stat_id
		{
			get
			{
				return this._stat_id;
			}
			set
			{
				if ((this._stat_id != value))
				{
					if (this._stat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstat_idChanging(value);
					this.SendPropertyChanging();
					this._stat_id = value;
					this.SendPropertyChanged("stat_id");
					this.Onstat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime2 NOT NULL")]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="BigInt NOT NULL")]
		public long value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stat_stat_count_value", Storage="_stat", ThisKey="stat_id", OtherKey="id", IsForeignKey=true)]
		public stat stat
		{
			get
			{
				return this._stat.Entity;
			}
			set
			{
				stat previousValue = this._stat.Entity;
				if (((previousValue != value) 
							|| (this._stat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._stat.Entity = null;
						previousValue.stat_count_values.Remove(this);
					}
					this._stat.Entity = value;
					if ((value != null))
					{
						value.stat_count_values.Add(this);
						this._stat_id = value.id;
					}
					else
					{
						this._stat_id = default(int);
					}
					this.SendPropertyChanged("stat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stats")]
	public partial class stat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private string _stat_type;
		
		private string _unit;
		
		private EntitySet<stat_count_value> _stat_count_values;
		
		private EntitySet<stat_measure_value> _stat_measure_values;
		
		private EntitySet<stat_countdown_value> _stat_countdown_values;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onstat_typeChanging(string value);
    partial void Onstat_typeChanged();
    partial void OnunitChanging(string value);
    partial void OnunitChanged();
    #endregion
		
		public stat()
		{
			this._stat_count_values = new EntitySet<stat_count_value>(new Action<stat_count_value>(this.attach_stat_count_values), new Action<stat_count_value>(this.detach_stat_count_values));
			this._stat_measure_values = new EntitySet<stat_measure_value>(new Action<stat_measure_value>(this.attach_stat_measure_values), new Action<stat_measure_value>(this.detach_stat_measure_values));
			this._stat_countdown_values = new EntitySet<stat_countdown_value>(new Action<stat_countdown_value>(this.attach_stat_countdown_values), new Action<stat_countdown_value>(this.detach_stat_countdown_values));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stat_type", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string stat_type
		{
			get
			{
				return this._stat_type;
			}
			set
			{
				if ((this._stat_type != value))
				{
					this.Onstat_typeChanging(value);
					this.SendPropertyChanging();
					this._stat_type = value;
					this.SendPropertyChanged("stat_type");
					this.Onstat_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stat_stat_count_value", Storage="_stat_count_values", ThisKey="id", OtherKey="stat_id")]
		public EntitySet<stat_count_value> stat_count_values
		{
			get
			{
				return this._stat_count_values;
			}
			set
			{
				this._stat_count_values.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stat_stat_measure_value", Storage="_stat_measure_values", ThisKey="id", OtherKey="stat_id")]
		public EntitySet<stat_measure_value> stat_measure_values
		{
			get
			{
				return this._stat_measure_values;
			}
			set
			{
				this._stat_measure_values.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stat_stat_countdown_value", Storage="_stat_countdown_values", ThisKey="id", OtherKey="stat_id")]
		public EntitySet<stat_countdown_value> stat_countdown_values
		{
			get
			{
				return this._stat_countdown_values;
			}
			set
			{
				this._stat_countdown_values.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_stat_count_values(stat_count_value entity)
		{
			this.SendPropertyChanging();
			entity.stat = this;
		}
		
		private void detach_stat_count_values(stat_count_value entity)
		{
			this.SendPropertyChanging();
			entity.stat = null;
		}
		
		private void attach_stat_measure_values(stat_measure_value entity)
		{
			this.SendPropertyChanging();
			entity.stat = this;
		}
		
		private void detach_stat_measure_values(stat_measure_value entity)
		{
			this.SendPropertyChanging();
			entity.stat = null;
		}
		
		private void attach_stat_countdown_values(stat_countdown_value entity)
		{
			this.SendPropertyChanging();
			entity.stat = this;
		}
		
		private void detach_stat_countdown_values(stat_countdown_value entity)
		{
			this.SendPropertyChanging();
			entity.stat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stat_measure_values")]
	public partial class stat_measure_value : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _stat_id;
		
		private System.DateTime _date_created;
		
		private decimal _value;
		
		private EntityRef<stat> _stat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstat_idChanging(int value);
    partial void Onstat_idChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void OnvalueChanging(decimal value);
    partial void OnvalueChanged();
    #endregion
		
		public stat_measure_value()
		{
			this._stat = default(EntityRef<stat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stat_id", DbType="Int NOT NULL")]
		public int stat_id
		{
			get
			{
				return this._stat_id;
			}
			set
			{
				if ((this._stat_id != value))
				{
					if (this._stat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstat_idChanging(value);
					this.SendPropertyChanging();
					this._stat_id = value;
					this.SendPropertyChanged("stat_id");
					this.Onstat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime2 NOT NULL")]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Decimal(19,4) NOT NULL")]
		public decimal value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stat_stat_measure_value", Storage="_stat", ThisKey="stat_id", OtherKey="id", IsForeignKey=true)]
		public stat stat
		{
			get
			{
				return this._stat.Entity;
			}
			set
			{
				stat previousValue = this._stat.Entity;
				if (((previousValue != value) 
							|| (this._stat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._stat.Entity = null;
						previousValue.stat_measure_values.Remove(this);
					}
					this._stat.Entity = value;
					if ((value != null))
					{
						value.stat_measure_values.Add(this);
						this._stat_id = value.id;
					}
					else
					{
						this._stat_id = default(int);
					}
					this.SendPropertyChanged("stat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stat_countdown_values")]
	public partial class stat_countdown_value : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _stat_id;
		
		private System.DateTime _date_created;
		
		private System.DateTime _value;
		
		private EntityRef<stat> _stat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstat_idChanging(int value);
    partial void Onstat_idChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void OnvalueChanging(System.DateTime value);
    partial void OnvalueChanged();
    #endregion
		
		public stat_countdown_value()
		{
			this._stat = default(EntityRef<stat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stat_id", DbType="Int NOT NULL")]
		public int stat_id
		{
			get
			{
				return this._stat_id;
			}
			set
			{
				if ((this._stat_id != value))
				{
					if (this._stat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstat_idChanging(value);
					this.SendPropertyChanging();
					this._stat_id = value;
					this.SendPropertyChanged("stat_id");
					this.Onstat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime2 NOT NULL")]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="DateTime2 NOT NULL")]
		public System.DateTime value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stat_stat_countdown_value", Storage="_stat", ThisKey="stat_id", OtherKey="id", IsForeignKey=true)]
		public stat stat
		{
			get
			{
				return this._stat.Entity;
			}
			set
			{
				stat previousValue = this._stat.Entity;
				if (((previousValue != value) 
							|| (this._stat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._stat.Entity = null;
						previousValue.stat_countdown_values.Remove(this);
					}
					this._stat.Entity = value;
					if ((value != null))
					{
						value.stat_countdown_values.Add(this);
						this._stat_id = value.id;
					}
					else
					{
						this._stat_id = default(int);
					}
					this.SendPropertyChanged("stat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
